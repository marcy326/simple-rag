name: Infrastructure CI/CD Pipeline

on:
  push:
    paths:
      - 'infra/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main

jobs:
  validate-and-deploy:
    runs-on: ubuntu-latest

    environment: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}

    steps:
      # コードをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v3

      # Terraformのセットアップ
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      # Terraformの初期化とPlan
      - name: Plan Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aurora_master_password: ${{ secrets.TF_VAR_AURORA_MASTER_PASSWORD }}
          TF_VAR_openai_api_key: ${{ secrets.TF_VAR_OPENAI_API_KEY }}
          TF_VAR_aurora_database_name: ${{ env.TF_VAR_AURORA_DATABASE_NAME }}
          TF_VAR_aurora_master_username: ${{ env.TF_VAR_AURORA_MASTER_USERNAME }}
          TF_VAR_aws_region: ${{ env.TF_VAR_AWS_REGION }}
          TF_VAR_stage_name: ${{ env.TF_VAR_STAGE_NAME }}
        run: |
          cd infra
          terraform init -backend-config=envs/dev/dev.tfbackend
          terraform plan

      # TerraformのApply
      - name: Plan Terraform (Production)
        if: github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aurora_master_password: ${{ secrets.TF_VAR_AURORA_MASTER_PASSWORD }}
          TF_VAR_openai_api_key: ${{ secrets.TF_VAR_OPENAI_API_KEY }}
          TF_VAR_aurora_database_name: ${{ env.TF_VAR_AURORA_DATABASE_NAME }}
          TF_VAR_aurora_master_username: ${{ env.TF_VAR_AURORA_MASTER_USERNAME }}
          TF_VAR_aws_region: ${{ env.TF_VAR_AWS_REGION }}
          TF_VAR_stage_name: ${{ env.TF_VAR_STAGE_NAME }}
        run: |
          cd infra
          terraform apply -auto-approve
