name: Infrastructure Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      # コードをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v3

      # Terraformのセットアップ
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      
      - name: Setup tfvarenv
        uses: marcy326/tfvarenv@v0
        with:
          version: v0.3.4
    
      - name: Setup tfvarenv environment
        run: |
          cd infra
          tfvarenv use ${{ inputs.environment }}
      
      # TerraformのApply
      - name: Apply Terraform
        run: |
          cd infra
          tfvarenv apply ${{ inputs.environment }} --remote --auto-approve

      - name: Get Terraform Outputs
        id: terraform_output
        run: |
          cd infra
          terraform output -json > output.json
          echo "OUTPUT_JSON=$(cat output.json)" >> $GITHUB_OUTPUT
      
      - name: Initialize Database
        run: |
          CLUSTER_ARN=$(echo ${{ steps.terraform_output.outputs.OUTPUT_JSON }} | jq -r '.cluster_arn.value')
          SECRET_ARN=$(echo ${{ steps.terraform_output.outputs.OUTPUT_JSON }} | jq -r '.secret_arn.value')
          DATABASE_NAME=$(echo ${{ steps.terraform_output.outputs.OUTPUT_JSON }} | jq -r '.database_name.value')
          SQL_STATEMENT="CREATE EXTENSION IF NOT EXISTS vector; CREATE TABLE IF NOT EXISTS text_embeddings ( id SERIAL PRIMARY KEY, filename TEXT NOT NULL, content TEXT NOT NULL, embedding VECTOR(1536), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP );"
          aws rds-data execute-statement \
            --resource-arn "$CLUSTER_ARN" \
            --secret-arn "$SECRET_ARN" \
            --database "$DATABASE_NAME" \
            --sql "$SQL_STATEMENT"
